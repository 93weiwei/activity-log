name: CI/CD Deployment Pipeline

on:
  push:
    branches: [ main, master ]
  workflow_dispatch: {}

permissions:
  contents: write   # 允許建立與修改 release

jobs:
  # ---------- Build Job ----------
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install & Build
        run: |
          if [ -f package.json ]; then
            npm ci || npm install
            npm run build || echo "No build script, continue."
          else
            echo "No package.json found, skipping npm build."
          fi

      - name: Archive build
        run: zip -r build.zip . -x ".git/*"

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: build.zip

  # ---------- Deploy to Dev ----------
  deploy-dev:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout (for gh CLI)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          if ! command -v gh >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y gh
          fi

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release to Dev
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release view "$TAG" --repo "$GITHUB_REPOSITORY" >/dev/null 2>&1 && \
            gh release delete "$TAG" --repo "$GITHUB_REPOSITORY" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE" --repo "$GITHUB_REPOSITORY"

  # ---------- Deploy to Staging ----------
  deploy-staging:
    needs: deploy-dev
    runs-on: ubuntu-latest
    environment: Staging
    steps:
      - name: Checkout (for gh CLI)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          if ! command -v gh >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y gh
          fi

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release to Staging
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release view "$TAG" --repo "$GITHUB_REPOSITORY" >/dev/null 2>&1 && \
            gh release delete "$TAG" --repo "$GITHUB_REPOSITORY" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE" --repo "$GITHUB_REPOSITORY"

  # ---------- Deploy to Production ----------
  deploy-production:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: Production   # 👈 這裡會觸發 Reviewer 核准
    steps:
      - name: Checkout (for gh CLI)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install GitHub CLI
        run: |
          if ! command -v gh >/dev/null 2>&1; then
            sudo apt-get update
            sudo apt-get install -y gh
          fi

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact

      - name: Release to Production
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          TAG: ${{ vars.BUILD_TAG }}
          NOTE: ${{ vars.RELEASE_NOTE }}
        run: |
          gh release view "$TAG" --repo "$GITHUB_REPOSITORY" >/dev/null 2>&1 && \
            gh release delete "$TAG" --repo "$GITHUB_REPOSITORY" -y || true
          gh release create "$TAG" build.zip --notes "$NOTE" --repo "$GITHUB_REPOSITORY"

